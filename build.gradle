plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.1'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

group = 'io.github.robbilie'
archivesBaseName = 'node-green'
version = '0.0.9'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "node-green"
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'node-green'
                description = 'node-green is a spin on node-red\\\'s runtime implemented in java'
                url = 'https://github.com/Robbilie/node-green'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'Robbilie'
                        name = 'Robert Schuh'
                        email = 'github@eneticum.de'
                    }
                }
                scm {
                    connection = 'scm:git://github.com/Robbilie/node-green.git'
                    developerConnection = 'scm:git://github.com/Robbilie/node-green.git'
                    url = 'https://github.com/Robbilie/node-green'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
